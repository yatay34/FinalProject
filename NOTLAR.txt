PnP = Plug and Play (Tak ve Çalýþtýr)

Business -- API katmaný -- (Android/IOS/UI(Asp.Net)...)
API : Restful mimarisi(standart)ile karþýmýza çýkýyor-->
   JSon formatý sonraki versiyonlarý SOAP mimarisi 
Restful: SOAP ýn daha light ve kullanýþlý bir versiyonudur. 
Farklý sistemlerin birbirini anlayabilmesi için kullanýlan teknlji/standart

DataAccess : sql leri yazýyoruz 
Business : iþ kurallarýný 

LINQ = Language Integrated Query
--------------------------------------------------------------
--------------------------------------------------------------
ctor : constuctor oluþturma snippet

* Çýplak class kalmasýn
* IEntity -- implement eden class bir vt tablosudur. 

* interfacelerin kendileri deðil operasyonlarý PUBLIC tir

Naming Commension (Global Ýsimlendirme)
   -  class local deðiþkenler : _products
--------------------------------------------------------------
--------------------------------------------------------------
ClassLibrary (.NET Standart)  --- DataAccess, Business, Entities
Console App  (.NET Core)      --- UIConsole / ConsoleUI 


DataAccess, Business, Entities projelerine 
     +  Abstract, Concrete klasörleri  
     
               ***** Çýplak class kalmasýn!!   
               IEntity -- implement eden class bir vt tablosudur. 
* Entities >Abstract  +IEntity
* Entities >Concrete  +Product, Category 

Dal(DataAccessLayer)-Dao(DataAccessObject)
.... ADO.Net, EntityFramework, Hibernate, Dapper vb
---- alternatif teknolojileri olan bir þey kodluyorsanýz KLASÖRlemeyi ihmal etme.

* DataAccess >Abstract  +IProductDal
* DataAccess >Concrete  +InMemory, EntityFramework klasörleri..

* DataAccess >Concrete >InMemory > ( InMemoryProductDal.cs : IProductDal )
                        
* Business >Abstract  +IProductService             
--------------------------------------------------------------
3.02.2021 
DataAccess 
** Generic Repository Design Pattern

** Muhtemelen .NetCore 3 yüklü olduðu için v3.1.11; (latestStable 5 = .netCore 5 istiyor!)
  DataAccess : ManageNugetPackages>EntityFrameworkCore.SqlServer v3.1.11 kurduk

  (DbContext bu framework ile gelir! --Context te kullanýyoruz')
  
** Context : db tablolarý ile proje class-larýmýzý iliþkilendirdiðimiz class

** Garbage collector: belli aralýklarla belleði kntrol edip gereksizleri atar. (new lenmiþ class)
**  //IDisposibale Pattern implementation of c#
using (resource){...} -------belleði hýzlýca temizleme
bloðu sona erdiðinde (gel abi topla buralarý)
       garbage collector a gidip beni bellekten at der. içerisine yazýlan nesneler silinir.
       genelde context nesnesi için tanýmlýyoruz. 
       >> context nesnesi biraz pahalý!


